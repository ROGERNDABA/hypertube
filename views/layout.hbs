<html lang="en">

	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="X-UA-Compatible" content="ie=edge">
		<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
		<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
		<script src="https://npmcdn.com/tether@1.2.4/dist/js/tether.min.js"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
	</head>

	<body>
		{{{body}}}
	</body>
	<script>
		function getQueryParams(qs) {
			qs = qs.split('+').join(' ');
			var params = {},
				tokens,
				re = /[?&]?([^=]+)=([^&]*)/g;
			while (tokens = re.exec(qs)) {
				params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
			}
			return params;
		}
		
		var Base64 = {
					_keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
					encode: function (e) {
						var t = "";
						var n, r, i, s, o, u, a;
						var f = 0;
						e = Base64._utf8_encode(e);
						while (f < e.length) {
							n = e.charCodeAt(f++);
							r = e.charCodeAt(f++);
							i = e.charCodeAt(f++);
							s = n >> 2;
							o = (n & 3) << 4 | r >> 4;
							u = (r & 15) << 2 | i >> 6;
							a = i & 63;
							if (isNaN(r)) {
								u = a = 64
							} else if (isNaN(i)) {
								a = 64
							}
							t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a)
						}
						return t
					},
					decode: function (e) {
						var t = "";
						var n, r, i;
						var s, o, u, a;
						var f = 0;
						e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
						while (f < e.length) {
							s = this._keyStr.indexOf(e.charAt(f++));
							o = this._keyStr.indexOf(e.charAt(f++));
							u = this._keyStr.indexOf(e.charAt(f++));
							a = this._keyStr.indexOf(e.charAt(f++));
							n = s << 2 | o >> 4;
							r = (o & 15) << 4 | u >> 2;
							i = (u & 3) << 6 | a;
							t = t + String.fromCharCode(n);
							if (u != 64) {
								t = t + String.fromCharCode(r)
							}
							if (a != 64) {
								t = t + String.fromCharCode(i)
							}
						}
						t = Base64._utf8_decode(t);
						return t
					},
					_utf8_encode: function (e) {
						e = e.replace(/\r\n/g, "\n");
						var t = "";
						for (var n = 0; n < e.length; n++) {
							var r = e.charCodeAt(n);
							if (r < 128) {
								t += String.fromCharCode(r)
							} else if (r > 127 && r < 2048) {
								t += String.fromCharCode(r >> 6 | 192);
								t += String.fromCharCode(r & 63 | 128)
							} else {
								t += String.fromCharCode(r >> 12 | 224);
								t += String.fromCharCode(r >> 6 & 63 | 128);
								t += String.fromCharCode(r & 63 | 128)
							}
						}
						return t
					},
					_utf8_decode: function (e) {
						var t = "";
						var n = 0;
						var r = c1 = c2 = 0;
						while (n < e.length) {
							r = e.charCodeAt(n);
							if (r < 128) {
								t += String.fromCharCode(r);
								n++
							} else if (r > 191 && r < 224) {
								c2 = e.charCodeAt(n + 1);
								t += String.fromCharCode((r & 31) << 6 | c2 & 63);
								n += 2
							} else {
								c2 = e.charCodeAt(n + 1);
								c3 = e.charCodeAt(n + 2);
								t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
								n += 3
							}
						}
						return t
					}
				}

	</script>
</html>